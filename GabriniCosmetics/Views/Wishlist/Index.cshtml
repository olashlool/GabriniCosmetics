@model GabriniCosmetics.Areas.Admin.Models.Wishlist

@{
    string culture = System.Threading.Thread.CurrentThread.CurrentUICulture.Name;
}
<div class="master-wrapper-page">
        <div class="master-column-wrapper">
            <div class="center-1">
                <div class="page wishlist-page">
                    <div class="page-title">
                    <h1>@Localizer["Wishlist"]</h1>
                    </div>
                    <div class="master-wrapper-content page-body">
                        <div class="wishlist-content">
                        <form method="post" id="wishlist-form">
                                <div class="table-wrapper">
                                    <table class="cart jsmartable jsmatable-initialized">
                                        <colgroup>
                                            <col class="table-info" width="1">
                                            <col width="1">
                                            <col width="1">
                                            <col width="1">
                                            <col width="1">
                                            <col>
                                            <col width="1">
                                            <col width="1">
                                            <col width="1">
                                            <col width="1">
                                        </colgroup>
                                        <thead>
                                            <tr>
                                                <th class="table-info">Info</th>
                                            <th data-breakpoint="md" class="add-to-cart">@Localizer["AddToCart"]</th>
                                            <th data-breakpoint="md" class="sku">@Localizer["Category"]</th>
                                            <th data-breakpoint="md" class="sku">@Localizer["SubCategory"]</th>
                                            <th class="product-picture">@Localizer["Image"]</th>
                                            <th data-breakpoint="sm" class="product">@Localizer["Products"]</th>
                                            <th data-breakpoint="md" class="unit-price">@Localizer["Price"]</th>
                                            <th class="quantity">@Localizer["Qty"].</th>
                                            <th class="subtotal">@Localizer["Total"]</th>
                                            <th data-breakpoint="md" class="remove-from-cart">@Localizer["Remove"]</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.WishlistsDetail)
                                            {
                                            var categoryName = culture.StartsWith("en") ? @item.Products.Subcategory.Category.NameEn : @item.Products.Subcategory.Category.NameAr;
                                            var subCategoryName = culture.StartsWith("en") ? @item.Products.Subcategory.NameEn : @item.Products.Subcategory.NameAr;
                                            var productName = culture.StartsWith("en") ? @item.Products.NameEn : @item.Products.NameAr;

                                                <tr>
                                                    <td class="add-to-cart">
                                                    <input type="checkbox" id="add-to-cart-icon-@item.Id" name="addtocart" class="select-product-checkbox" value="@item.Id">
                                                    <label class="add-to-cart-label td-title" for="add-to-cart-icon-@item.Id">@Localizer["AddToCart"]</label>
                                                    </td>
                                                    <td class="sku">
                                                    <label class="td-title">@Localizer["Category"]:</label>
                                                    <span class="sku-number">@categoryName</span>
                                                    </td>
                                                    <td class="sku">
                                                    <label class="td-title">@Localizer["SubCategory"]:</label>
                                                    <span class="sku-number">@subCategoryName</span>
                                                    </td>
                                                    <td class="product-picture">
                                                    <a href="~/uploads/@item.Image"><img alt="@Localizer["PictureOf"] @productName" src="~/uploads/@item.Image" title="@Localizer["ShowDetailsFor"] @productName"></a>
                                                    </td>
                                                    <td class="product">
                                                    <a href="~/uploads/@item.Image" class="product-name">@productName</a>
                                                    <div class="attributes" style="display: flex;gap: 8px;">
                                                        @Localizer["Color"]: <div style="width:16px; height: 16px; background: @item.ColorName; border-radius: 4px;"></div>
                                                        </div>
                                                    </td>
                                                    <td class="unit-price">
                                                    <label class="td-title">@Localizer["Price"]:</label>
                                                    @if (item.Products.Flags.Any(f => f.FlagType == "Sale"))
                                                    {
                                                        <span class="product-unit-price">@item.Products.PriceAfterDiscount @Localizer["JOD"]</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="product-unit-price">@item.Products.Price @Localizer["JOD"]</span>
                                                    }
                                                </td>
                                                    <td class="quantity">
                                                    <label class="td-title">@Localizer["Qty"]:</label>
                                                        <div class="qty-input-wrap">
                                                        <button type="button" class="qty-btn qty-minus" value="-1" onclick="location.href='@Url.Action("RemoveItem", "Wishlist", new { productId = item.ProductId, img = item.Image })'">-</button>
                                                        <input type="text" value="@item.Quantity" class="qty-input" aria-label="Qty.">
                                                        <button type="button" class="qty-btn qty-plus" value="1" onclick="location.href='@Url.Action("AddItem", "Wishlist", new { productId = item.ProductId, img = item.Image })'">+</button>
                                                    </div>
                                                    </td>
                                                    <td class="subtotal">
                                                    <label class="td-title">@Localizer["Total"]:</label>
                                                    @{
                                                        double? total;
                                                        if (item.Products.Flags.Any(x => x.FlagType == "Sale"))
                                                        {
                                                            total = item.Products.PriceAfterDiscount * item.Quantity;
                                                        }
                                                        else
                                                        {
                                                            total = item.Products.Price * item.Quantity;
                                                        }
                                                    }
                                                        <span class="product-subtotal">@total</span>
                                                    </td>
                                                    <td class="remove-from-cart">
                                                        <button type="button" name="updatecart" class="remove-btn" onclick="location.href='@Url.Action("RemoveItem", "WishList", new { productId = item.ProductId, img = item.Image })'"></button>
                                                    </td>
                                                </tr>

                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <div class="buttons">
                                <button type="button" name="addtocartbutton" class="button-2 wishlist-add-to-cart-button" id="add-selected-to-cart-button">@Localizer["AddToCart"]</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</div>

<div id="bar-notification-wishlist" class="bar-notification-container" data-close="Close">
    <div class="bar-notification success" style="display: none;">
        <p class="content">@Localizer["AlertAdded"] <a href="/Wishlist">@Localizer["Cart"]</a></p>
        <span class="close" title="Close"></span>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $('#add-selected-to-cart-button').click(function () {
            var selectedItems = [];
            $('.select-product-checkbox:checked').each(function () {
                selectedItems.push($(this).val());
            });

            if (selectedItems.length > 0) {
                $.ajax({
                    url: '@Url.Action("AddSelectedToCart", "Cart")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ selectedItems: selectedItems }), // Wrapping in an object
                    success: function (response) {
                        // Show the success notification
                        $('#bar-notification-wishlist .bar-notification.success').show();

                        // Wait for 2 seconds
                        setTimeout(function () {
                            // Reload the page after 2 seconds
                            location.reload();
                        }, 2000);
                    },
                    error: function (error) {
                        // Handle error response
                        console.error(error);
                    }
                });
            } else {
                alert("Please select at least one product.");
            }
        });
    });
</script>
